---
---
# Source: kured/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kured
  namespace: kube-system
---

# Source: kured/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kured
  labels:
    app: kured
    chart: kured-1.4.1
    release: kured
    heritage: Tiller
rules:
# Allow kured to read spec.unschedulable
# Allow kubectl to drain/uncordon
#
# NB: These permissions are tightly coupled to the bundled version of kubectl; the ones below
# match https://github.com/kubernetes/kubernetes/blob/v1.12.1/pkg/kubectl/cmd/drain.go
#
- apiGroups: [""]
  resources: ["nodes"]
  verbs:     ["get", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs:     ["list","delete","get"]
- apiGroups: ["extensions"]
  resources: ["daemonsets"]
  verbs:     ["get"]
- apiGroups: ["apps"]
  resources: ["daemonsets"]
  verbs:     ["get"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs:     ["create"]
---

# Source: kured/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kured
  labels:
    app: kured
    chart: kured-1.4.1
    release: kured
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kured
subjects:
- kind: ServiceAccount
  name: kured
  namespace: kube-system
---

# Source: kured/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kube-system
  name: kured
  labels:
    app: kured
    chart: kured-1.4.1
    release: kured
    heritage: Tiller
rules:
  # Allow kured to lock/unlock itself
  - apiGroups:     ["extensions"]
    resources:     ["daemonsets"]
    resourceNames: ["kured"]
    verbs:         ["update", "patch"]
  - apiGroups:     ["apps"]
    resources:     ["daemonsets"]
    resourceNames: ["kured"]
    verbs:         ["update"]
---

# Source: kured/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: kube-system
  name: kured
  labels:
    app: kured
    chart: kured-1.4.1
    release: kured
    heritage: Tiller
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: kured
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kured
---

# Source: kured/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kured
  namespace: kube-system
  labels:
    app: kured
    chart: kured-1.4.1
    release: kured
    heritage: Tiller
spec:
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: kured
      release: kured
  template:
    metadata:
      labels:
        app: kured
        release: kured
    spec:
      serviceAccountName: kured
      hostPID: true
      restartPolicy: Always
      containers:
        - name: kured
          image: "weaveworks/kured:1.2.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true # Give permission to nsenter /proc/1/ns/mnt
          resources:
            null
            
          command:
            - /usr/bin/kured
          args:
            - --ds-name=kured
            - --ds-namespace=kube-system
            - --prometheus-url=http://prometheus-server.prometheus.svc.cluster.local
          env:
            # Pass in the name of the node on which this pod is scheduled
            # for use with drain/uncordon operations and lock acquisition
            - name: KURED_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      restartPolicy: Always
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        

